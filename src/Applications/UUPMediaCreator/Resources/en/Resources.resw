<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.object.binary.base64">
        <value>[base64 mime encoded serialized  Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the  Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a  class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>All done!</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>Creating ISO...</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>Creating Windows Installer...</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Default option. Provides a good balance between size, performance, and resource utilization.</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>Do you really want to exit the application?</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Downloading</value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>Downloading...</value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>Edition</value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>Edition:</value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>Expired:</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>An error occured!</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>Failed:</value>
  </data>
  <data name="String21" xml:space="preserve">
    <value>First, let's select the architecture</value>
  </data>
  <data name="String22" xml:space="preserve">
    <value>For the following architecture:</value>
  </data>
  <data name="String23" xml:space="preserve">
    <value>Getting:</value>
  </data>
  <data name="String24" xml:space="preserve">
    <value>In the following language:</value>
  </data>
  <data name="String25" xml:space="preserve">
    <value>Integrating Windows Recovery Environment...</value>
  </data>
  <data name="String26" xml:space="preserve">
    <value>Language Code</value>
  </data>
  <data name="String27" xml:space="preserve">
    <value>Language Name</value>
  </data>
  <data name="String28" xml:space="preserve">
    <value>Loading builds</value>
  </data>
  <data name="String29" xml:space="preserve">
    <value>Loading editions</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Applying Image...</value>
  </data>
  <data name="String30" xml:space="preserve">
    <value>Loading languages</value>
  </data>
  <data name="String31" xml:space="preserve">
    <value>Most compact option. The resulting media size will be the smallest possible, but will use much more resources.</value>
  </data>
  <data name="String32" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="String33" xml:space="preserve">
    <value>Path to the resulting ISO image...</value>
  </data>
  <data name="String34" xml:space="preserve">
    <value>Preparing files...</value>
  </data>
  <data name="String35" xml:space="preserve">
    <value>Progress:</value>
  </data>
  <data name="String36" xml:space="preserve">
    <value>Quickest option. Lean on resource utilisation, but will not be as compact as LZX or LZMS.</value>
  </data>
  <data name="String37" xml:space="preserve">
    <value>Reading Metadata...</value>
  </data>
  <data name="String38" xml:space="preserve">
    <value>Select compression type</value>
  </data>
  <data name="String39" xml:space="preserve">
    <value>Select the Windows edition</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>As an:</value>
  </data>
  <data name="String40" xml:space="preserve">
    <value>The selected architecture will be used for the final medium</value>
  </data>
  <data name="String41" xml:space="preserve">
    <value>The selected build will be used for the final medium</value>
  </data>
  <data name="String42" xml:space="preserve">
    <value>The tool will proceed to create an ISO media using the details you previously selected. If any information is incorrect, go back, and change it before clicking next. Once you click next, you cannot go back.</value>
  </data>
  <data name="String43" xml:space="preserve">
    <value>The wizard is creating your ISO image. This process might take a while depending on your computer specifications. It is recommended to not minimize or close this window while the process is ongoing.</value>
  </data>
  <data name="String44" xml:space="preserve">
    <value>The wizard is downloading the required files to create the finished medium. This process might take a while depending on your network connection. It is recommended to not minimize or close this window while the process is ongoing. Once done, it will automatically be followed by the building process.</value>
  </data>
  <data name="String45" xml:space="preserve">
    <value>This architecture is most commonly used on always connected Laptops, Tablets and Phones.</value>
  </data>
  <data name="String46" xml:space="preserve">
    <value>This architecture is most commonly used on modern Laptops, Tablets and Desktops.</value>
  </data>
  <data name="String47" xml:space="preserve">
    <value>This architecture is most commonly used on older Laptops and Desktops.</value>
  </data>
  <data name="String48" xml:space="preserve">
    <value>This compression type will be used for the Windows Recovery Environment, Windows Preinstallation Environment (unless it's LZMS in which case it will fallback to LZX) and the Windows Install image.</value>
  </data>
  <data name="String49" xml:space="preserve">
    <value>This is the end of the wizard, pressing next will go back to the beginning, or you can simply close this window to end the application.</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="String50" xml:space="preserve">
    <value>This process might take a few minutes to complete.</value>
  </data>
  <data name="String51" xml:space="preserve">
    <value>This wizard will guide you through creating a Windows Medium</value>
  </data>
  <data name="String52" xml:space="preserve">
    <value>To Recap</value>
  </data>
  <data name="String53" xml:space="preserve">
    <value>Unknown:</value>
  </data>
  <data name="String54" xml:space="preserve">
    <value>Using the following compression:</value>
  </data>
  <data name="String55" xml:space="preserve">
    <value>Verifying:</value>
  </data>
  <data name="String56" xml:space="preserve">
    <value>Waiting...</value>
  </data>
  <data name="String57" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="String58" xml:space="preserve">
    <value>What language do you speak?</value>
  </data>
  <data name="String59" xml:space="preserve">
    <value>What version of Windows do you want to build media for?</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="String60" xml:space="preserve">
    <value>Where do you want to save your ISO image?</value>
  </data>
  <data name="String61" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Building Media</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Capturing Image...</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Completed:</value>
  </data>
</root>